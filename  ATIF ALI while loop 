{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a562fd63-14c9-408a-88c0-9a8fdc7c0091",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "f85c07cb-3943-4d5f-858c-549fbc5c3f7b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10\n",
      "9\n",
      "8\n",
      "7\n",
      "6\n",
      "5\n",
      "4\n",
      "3\n",
      "2\n",
      "1\n",
      "loop complete\n"
     ]
    }
   ],
   "source": [
    "# question 1\n",
    "age = 10\n",
    "while age >= 1:\n",
    "    print(age)\n",
    "    age -=1\n",
    "print(\"loop complete\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "3db0f4ab-8e3f-47d6-ac00-34dde8fadcb4",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2\n",
      "4\n",
      "6\n",
      "8\n",
      "10\n",
      "12\n",
      "14\n",
      "16\n",
      "18\n",
      "20\n"
     ]
    }
   ],
   "source": [
    "# question 2\n",
    "age = 2\n",
    "while age <= 20:\n",
    "    print(age)\n",
    "    age +=2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "2863e6e8-ecc3-46b9-85be-8b4ab44663da",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "enter a number:  10\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "the sum of  the first  10 natural number is:\n"
     ]
    }
   ],
   "source": [
    "# question 3\n",
    "n=int(input(\"enter a number: \"))\n",
    "sum=0\n",
    "i=1\n",
    "while i<=n:\n",
    "    sum +=i\n",
    "    i+=1\n",
    "print(\"the sum of  the first \", n, \"natural number is:\")\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "137b868a-c049-43c6-b2e8-c37dd5016a0b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Enter a positive number:  4\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Thank you!\n"
     ]
    }
   ],
   "source": [
    "# question 4\n",
    "num = int(input(\"Enter a positive number: \"))\n",
    "while num <= 0:\n",
    "    num = int(input(\"Invalid. Enter a positive number: \"))\n",
    "print(\"Thank you!\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "1dd59244-7b4b-4469-99bb-3991cfc874a1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "D\n",
      "a\n",
      "t\n",
      "a\n"
     ]
    }
   ],
   "source": [
    "# question 5\n",
    "s = \"Data\"\n",
    "i = 0\n",
    "while i < len(s):\n",
    "    print(s[i])\n",
    "    i += 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "25760501-a5f3-4a7b-bab0-7c9cda078b43",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Enter password:  \"analytics123\"\n",
      "Wrong password. Try again:  analytics123\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Access granted.\n"
     ]
    }
   ],
   "source": [
    "#question 6\n",
    "correct_password = \"analytics123\"\n",
    "password = input(\"Enter password: \")\n",
    "\n",
    "while password != correct_password:\n",
    "    password = input(\"Wrong password. Try again: \")\n",
    "\n",
    "print(\"Access granted.\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "3aac3b9d-eba2-440e-8569-58ca99b9040f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Guess the number:  7\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Correct!\n"
     ]
    }
   ],
   "source": [
    "# question 7\n",
    "secret = 7\n",
    "guess = int(input(\"Guess the number: \"))\n",
    "\n",
    "while guess != secret:\n",
    "    if guess < secret:\n",
    "        print(\"Too low\")\n",
    "    else:\n",
    "        print(\"Too high\")\n",
    "    guess = int(input(\"Guess again: \"))\n",
    "\n",
    "print(\"Correct!\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9b1c9d4f-7452-42d8-9762-d16d3fd4f228",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
